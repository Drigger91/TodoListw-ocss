{"version":3,"sources":["logo.svg","Counter.js","Todo.js","ListRender.js","Todo1.js","App.js","reportWebVitals.js","index.js"],"names":["Counter","Component","ListRender","props","text","onClick","delItems","id","Todo1","useState","items","setItems","input","setInput","prevlist","filter","val","index","value","placeholder","onChange","userInput","target","map","item","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAAe,I,kBCYAA,I,wCCVKC,Y,MCSLC,MATf,SAAoBC,GAEhB,OACI,8BACI,+BAAI,mCAAMA,EAAMC,QAAU,wBAAQC,QAAS,kBAAIF,EAAMG,SAASH,EAAMI,KAA1C,0BCkCvBC,MArCf,WACI,MAAyBC,mBAAS,IAAlC,mBAAMC,EAAN,KAAaC,EAAb,KACA,EAAyBF,mBAAS,IAAlC,mBAAOG,EAAP,KAAaC,EAAb,KAYMP,EAAW,SAACC,GACdI,GAAS,SAACG,GACP,OAAOA,EAASC,QAAO,SAACC,EAAIC,GACvB,OAAOA,IAAQV,SAK3B,OACI,gCACI,2CACA,uBAAOW,MAAON,EAAOO,YAAY,oBAAoBC,SAtB1C,SAACC,GACRR,EACQQ,EAAUC,OAAOJ,UAqB7B,wBAAQb,QAlBC,WACbM,GAAS,SAAAG,GACD,MAAM,GAAN,mBAAWA,GAAX,CAAoBF,OAE5BC,EAAS,KAcL,iBACC,6BAEOH,EAAMa,KAAK,SAACC,EAAKP,GAAU,OAAO,cAAC,EAAD,CAAYb,KAAMoB,EAAMjB,GAAIU,EAAmBX,SAAUA,GAAjBW,YChB/EQ,MATf,WACE,OACE,qBAAKC,UAAU,MAAf,SAEG,cAAC,EAAD,OCCQC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7960f9c6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\n\r\nfunction Counter() {\r\n    \r\n    return (\r\n        <div>\r\n            <button className='btn btn-success'>Welcome to bootstrap</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Counter\r\n","import React, { Component } from 'react'\r\n\r\n class Todo extends Component {\r\n     constructor(props) {\r\n         super(props)\r\n     \r\n         this.state = {\r\n              list :[],\r\n              input:\"\"\r\n\r\n         }\r\n     }\r\n     InputUpdate = (value)=>{ \r\n            this.setState({\r\n                input: value\r\n            })\r\n     }\r\n     AddItem = ()=>{\r\n         const input ={\r\n             id: Math.random()*10 ,\r\n             value: this.state.input\r\n         }\r\n         const list = [...this.state.list , input]\r\n         \r\n\r\n \r\n         console.log(input.value)\r\n         console.log(list)\r\n        \r\n     }\r\n\r\n     \r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Todo List</h1>\r\n                <input value = {this.state.input} onChange={ input => this.InputUpdate(input.target.value)}></input> <button onClick={()=>this.AddItem()}>Add</button>\r\n          \r\n                <ul>\r\n                {\r\n                    this.state.list.map(\r\n                        input=>{return <li>{input.value}</li>}\r\n                    )\r\n                }\r\n            </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react'\r\n\r\nfunction ListRender(props) {\r\n   \r\n    return ( \r\n        <div>\r\n            <li><h2> {props.text}</h2><button onClick={()=>props.delItems(props.id)}>Delete</button></li> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListRender\r\n","import React, { useState } from 'react'\r\nimport ListRender from './ListRender'\r\n\r\nfunction Todo1() {\r\n    const[items, setItems] = useState([])\r\n    const [input,setInput] = useState('')\r\n    const inputEvent = (userInput)=>{\r\n                setInput(\r\n                        userInput.target.value\r\n                )\r\n    }\r\n    const AddItems = ()=>{\r\n        setItems(prevlist=>{\r\n                return [...prevlist,input]\r\n        })\r\n        setInput('')\r\n    }\r\n    const delItems = (id)=>{\r\n        setItems((prevlist)=>{\r\n           return prevlist.filter((val,index)=>{\r\n                return index!==id;\r\n            }\r\n         ) })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>ToDo List</h1>\r\n            <input value={input} placeholder='Add items to list' onChange={inputEvent}></input>\r\n            <button onClick={AddItems}>Add</button>\r\n             <ul>\r\n                {\r\n                    items.map( (item,index)=>{ return <ListRender text={item} id={index} key={index} delItems={delItems}></ListRender>}) \r\n                 \r\n                }\r\n            </ul> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo1\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Counter from './Counter';\nimport Todo from './Todo';\nimport Todo1 from './Todo1';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       {/* <Todo></Todo>  */}\n       <Todo1></Todo1> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}